{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","dialog","active","to","id","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","key","messagesElements","messagesData","newMessageBody","isAuth","dialogs","dialogsItems","messages","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,uFCQpMC,EANC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SAAUH,EAAMG,U,QCO3BC,EARI,SAACJ,GAChB,OACI,yBAAKC,UAAWC,IAAEG,OAAS,IAAMH,IAAEI,QAC/B,kBAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,IAAKR,EAAMS,Q,0CCFlDC,EAAcC,YAAiB,IAexBC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAbZ,SAACb,GACpB,OACA,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAAUX,GACrBD,KAAM,iBAAkBa,YAAY,wBAExC,6BAAK,6CCuBEC,EA/BC,SAACvB,GAEb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,YAAYC,KACpC,SAACvB,GAAD,OAAY,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMoB,IAAKxB,EAAOG,GAAIA,GAAIH,EAAOG,QAEtEsB,EAAmBN,EAAMO,aAAaH,KACtC,SAAAzB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,QAAS0B,IAAK1B,EAAQK,QAE1CgB,EAAMQ,eAM3B,OAAKhC,EAAMiC,OAGP,yBAAKhC,UAAWC,IAAEgC,SACd,yBAAKjC,UAAWC,IAAEiC,cACbT,GAEL,yBAAKzB,UAAWC,IAAEkC,UACd,6BAAMN,IAEV,kBAAClB,EAAD,CAAqBG,SAdT,SAACsB,GACjBrC,EAAMsC,YAAYD,EAAOL,oBAGH,kBAAC,IAAD,CAAUzB,GAAI,Y,wCClBxCgC,EAA6B,SAACf,GAAD,MAAY,CACzCS,OAAQT,EAAMgB,KAAKP,S,OCcRQ,4BAAQC,aAdD,SAAClB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACkB,GACtB,MAAO,CACHL,YAAa,SAACN,GACVW,EAASC,YAAmBZ,UDNR,SAACa,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK/C,MAAMiC,OAET,kBAACY,EAAcE,KAAK/C,OAFI,kBAAC,IAAD,CAAUO,GAAG,eAHT,GACXyC,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,KCG9DL,CAAwElB","file":"static/js/4.979ee0d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3nyqo\",\"dialogsItems\":\"Dialogs_dialogsItems__13zQp\",\"dialog\":\"Dialogs_dialog__3aTbl\",\"active\":\"Dialogs_active__3_9qU\",\"messages\":\"Dialogs_messages__xfP85\",\"message\":\"Dialogs_message__2Kp72\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit} >\r\n        <div>\r\n            <Field component={Textarea}\r\n            validate={[required, maxLength50]} \r\n            name={\"newMessageBody\"} placeholder=\"Enter your message\" />\r\n            </div>\r\n        <div><button>Send</button></div>\r\n    </form>\r\n    )\r\n};\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AddMessageFormRedux } from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(\r\n        (dialog) => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\r\n\r\n    let messagesElements = state.messagesData.map(\r\n        message => <Message message={message.message} key={message.id} />);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { sendMessageCreator } from '../../redux/dialogs_reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}