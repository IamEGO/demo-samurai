{"version":3,"sources":["assets/images/user.jpg","api/api.js","redux/dialogs_reducer.js","components/Users/Users.module.css","assets/images/preloader.svg","Login/Login.module.css","components/Navbar/Navbar.module.css","common/FormsControls/FormsControls.jsx","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object_helpers.js","redux/users_reduser.js","common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users_Selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth_reduser.js","components/Header/HeaderContainer.jsx","Login/Login.jsx","redux/app_reduser.js","redux/sidebar_reducer.js","redux/redux_store.js","hoc/withSuspense.jsx","App.js","index.js","utils/validators.js","common/Paginator/Paginator.module.css","common/Preloader/Preloader.jsx","components/Header/Header.module.css","common/FormsControls/FormsControls.module.css","redux/profile_reducer.js"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityhAPI","getCaptchaUrl","initialState","dialogsData","id","name","messagesData","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","validators","component","text","validate","Boolean","window","location","hostname","match","Navbar","s","nav","item","to","activeClassName","activeLink","active","News","Music","Settings","updateOblectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formSummaryError","messages","length","stopSubmit","_error","initialized","appReducer","sidebarReducer","require","createStore","combineReducers","applyMiddleware","store","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","value","maxLengthCreator","maxLength","preloader","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","Promise","reject","newPost","postId"],"mappings":"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","file":"static/js/main.bb51a815.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.768a78a3.jpg\";","import * as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"b0269b00-72dc-472c-9638-326f8b7562d3\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n           \r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile/`, profile);\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityhAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n};","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: 'Dimych' },\r\n        { id: 2, name: 'Andrew' },\r\n        { id: 3, name: 'Sveta' },\r\n        { id: 4, name: 'Sasha' },\r\n        { id: 5, name: 'Victor' },\r\n        { id: 6, name: 'Valera' },\r\n    ],\r\n    messagesData: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'Yo' },\r\n        { id: 4, message: 'Yo' },\r\n        { id: 5, message: 'Yo' },\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: 6, message: body }]\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1huj9\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.5b61a2d2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__l3gIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ond3o\",\"item\":\"Navbar_item__12qET\",\"activeLink\":\"Navbar_activeLink__1oDYO\"};","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css';\r\n\r\n\r\nconst FormControl = ({ input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")} >\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n        validate={validators}\r\n        component={component}\r\n        {...props}\r\n        /> {text}\r\n    </div>\r\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n//import s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n//import s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n//import s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","\r\n\r\nexport const updateOblectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n};\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateOblectInArray } from \"../utils/object_helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateOblectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateOblectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        };\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        };\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        };\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        };\r\n\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n            return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }} >NEXT</button>}\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id} >\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id) }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { follow(user.id) }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nconst Users = ({ currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props }) => {\r\n    return <div>\r\n        <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} \r\n        totalItemsCount={totalUsersCount} pageSize={pageSize} />\r\n        </div>\r\n        <div>\r\n            {users.map(u =>\r\n                <User user={u}\r\n                    key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />)}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, setCurrentPage, toggleFollowingProgress, unfollow, requestUsers } from '../../redux/users_reduser';\r\nimport Users from './Users';\r\nimport Preloader from '../../common/Preloader/Preloader.jsx';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getUsers } from '../../redux/users_Selector';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers }))(UsersContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src='https://www.freelogodesign.org/Content/img/logo-samples/celtica.png' />\r\n\r\n      <div className={s.loginBlock}>\r\n        { props.isAuth \r\n        ? <div>{props.login} - <button onClick={props.logout} >Log out</button></div>\r\n        : <NavLink to={'/login'}>Login</NavLink> }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityhAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'samurai_network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai_network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload:\r\n        { captchaUrl }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n};\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityhAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth_reduser';\r\n\r\nclass HeaderContainer extends React.Component {\r\n \r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport { login } from '../redux/auth_reduser';\r\nimport { required } from '../utils/validators';\r\nimport style from './Login.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n                {createField(\"Email\", \"email\", [required], Input)}\r\n                {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n                {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import { getAuthUserData } from \"./auth_reduser\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return { \r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const initialaizedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initialaizedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import profileReducer from \"./profile_reducer\";\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport sidebarReducer from \"./sidebar_reducer\";\r\nimport usersReducer from \"./users_reduser\";\r\nimport authReducer from \"./auth_reduser\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app_reduser\";\r\n\r\nconst { createStore, combineReducers, applyMiddleware, compose } = require(\"redux\");\r\n\r\nlet redusers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n        <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n};","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './Login/Login';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app_reduser';\nimport Preloader from './common/Preloader/Preloader';\nimport { HashRouter } from 'react-router-dom';\nimport store from './redux/redux_store';\nimport { Provider } from 'react-redux';\nimport { withSuspense } from './hoc/withSuspense';\n\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n//import ProfileContainer from './components/Profile/ProfileContainer';\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n  catchAllUnhandledErrors = (promiseRejectionEvent) => {\n    alert(\"Some error occured\");\n    console.error(promiseRejectionEvent);\n  }\n  componentDidMount() {\n    this.props.initializeApp();\n    window.addEventListener(\"unhandledejection\", this.catchAllUnhandledErrors);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"unhandledejection\", this.catchAllUnhandledErrors);\n  }\n  render() {\n    /*     if (!this.props.initialized) {\n          return <Preloader />\n        } */\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Switch>\n          <Route exact path='/'\n              render={() => <Redirect to={\"/profile\"} /> } />\n            <Route path='/dialogs'\n              render={withSuspense(DialogsContainer)} />\n            <Route path='/profile/:userId?'\n              render={withSuspense(ProfileContainer)} />\n            <Route path='/news' component={News} />\n            <Route path='/music' component={Music} />\n            <Route path='/settings' component={Settings} />\n            <Route path='/users'\n              render={() => <UsersContainer />} />\n            <Route path='/login'\n              render={() => <Login />} />\n            <Route path='*'\n              render={() => <div>404 NOT FOUND</div>} />\n          </Switch>\n        </div>\n      </div>\n    );\n  };\n};\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n  withRouter(connect(mapStateToProps, { initializeApp })(App)));\n\nconst SamuraiJSApp = (props) => {\n  return <HashRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </HashRouter>\n};\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\n\n  ReactDOM.render(<SamuraiJSApp />,document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1HFKq\",\"pageNumber\":\"Paginator_pageNumber__rA1oZ\",\"selectedPage\":\"Paginator_selectedPage__3SzDk\"};","import React from 'react';\r\nimport preloader from '../../assets/images/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n        </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3udyE\",\"loginBlock\":\"Header_loginBlock__2Lh5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1D47o\",\"error\":\"FormsControls_error__NkXo5\"};","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'It\\'s my first post', likesCount: 12 },\r\n        { id: 2, message: 'Hi, how are you?', likesCount: 11 },\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n        }\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n        if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n        if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n        } else {\r\n            dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }));\r\n            return Promise.reject(response.data.messages[0]);\r\n        }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}