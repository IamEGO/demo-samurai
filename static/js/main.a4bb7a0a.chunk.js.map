{"version":3,"sources":["redux/dialogs_reducer.js","components/Navbar/Navbar.module.css","components/Users/Users.module.css","assets/images/user.jpg","assets/images/preloader.svg","Login/Login.module.css","api/api.js","serviceWorker.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","utils/object_helpers.js","redux/users_reduser.js","common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users_Selector.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth_reduser.js","components/Header/HeaderContainer.jsx","Login/Login.jsx","redux/app_reduser.js","redux/sidebar_reducer.js","redux/redux_store.js","hoc/withSuspense.jsx","App.js","index.js","common/Preloader/Preloader.jsx","common/FormsControls/FormsControls.jsx","common/Paginator/Paginator.module.css","utils/validators.js","components/Header/Header.module.css","common/FormsControls/FormsControls.module.css","redux/profile_reducer.js"],"names":["initialState","dialogsData","id","name","messagesData","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","News","Music","Settings","updateOblectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Input","error","style","formSummaryError","messages","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","require","createStore","combineReducers","applyMiddleware","store","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","preloader","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.a4bb7a0a.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        { id: 1, name: 'Dimych' },\r\n        { id: 2, name: 'Andrew' },\r\n        { id: 3, name: 'Sveta' },\r\n        { id: 4, name: 'Sasha' },\r\n        { id: 5, name: 'Victor' },\r\n        { id: 6, name: 'Valera' },\r\n    ],\r\n    messagesData: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How are you?' },\r\n        { id: 3, message: 'Yo' },\r\n        { id: 4, message: 'Yo' },\r\n        { id: 5, message: 'Yo' },\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: 6, message: body }]\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ond3o\",\"item\":\"Navbar_item__12qET\",\"activeLink\":\"Navbar_activeLink__1oDYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1huj9\"};","module.exports = __webpack_public_path__ + \"static/media/user.768a78a3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.5b61a2d2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__l3gIW\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"b0269b00-72dc-472c-9638-326f8b7562d3\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n           \r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status });\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe =false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n//import s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n//import s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n//import s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","\r\n\r\nexport const updateOblectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n};\r\n","import { usersAPI } from \"../api/api\";\r\nimport { updateOblectInArray } from \"../utils/object_helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateOblectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateOblectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        };\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        };\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        };\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        };\r\n\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n};\r\n\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nconst Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator} >\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }} >NEXT</button>}\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id} >\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id) }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { follow(user.id) }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props }) => {\r\n    return <div>\r\n        <Paginator currentPage={props.currentPage} onPageChanged={onPageChanged} \r\n        totalUsersCount={totalUsersCount} pageSize={pageSize} />\r\n        <div>\r\n            {users.map(u =>\r\n                <User user={u}\r\n                    key={u.id}\r\n                    followingInProgress={props.followingInProgress}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow}\r\n                />)}\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, setCurrentPage, toggleFollowingProgress, unfollow, requestUsers } from '../../redux/users_reduser';\r\nimport Users from './Users';\r\nimport Preloader from '../../common/Preloader/Preloader.jsx';\r\nimport { compose } from 'redux';\r\nimport { getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getUsers } from '../../redux/users_Selector';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers }))(UsersContainer);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img src='https://www.freelogodesign.org/Content/img/logo-samples/celtica.png' />\r\n\r\n      <div className={s.loginBlock}>\r\n        { props.isAuth \r\n        ? <div>{props.login} - <button onClick={props.logout} >Log out</button></div>\r\n        : <NavLink to={'/login'}>Login</NavLink> }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'samurai_network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth_reduser';\r\n\r\nclass HeaderContainer extends React.Component {\r\n \r\n  render() {\r\n    return <Header {...this.props} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { login } from '../redux/auth_reduser';\r\nimport { required } from '../utils/validators';\r\nimport style from './Login.module.css';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"}\r\n                    validate={[required]}\r\n                    component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                    validate={[required]}\r\n                    component={Input} />\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"} /> remember me\r\n            </div>\r\n            {props.error && <div className={style.formSummaryError}>\r\n                {props.error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import { getAuthUserData } from \"./auth_reduser\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return { \r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const initialaizedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initialaizedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import profileReducer from \"./profile_reducer\";\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport sidebarReducer from \"./sidebar_reducer\";\r\nimport usersReducer from \"./users_reduser\";\r\nimport authReducer from \"./auth_reduser\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app_reduser\";\r\n\r\nconst { createStore, combineReducers, applyMiddleware, compose } = require(\"redux\");\r\n\r\nlet redusers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n        <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n};","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, withRouter } from 'react-router-dom';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './Login/Login';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app_reduser';\nimport Preloader from './common/Preloader/Preloader';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/redux_store';\nimport { Provider } from 'react-redux';\nimport { withSuspense } from './hoc/withSuspense';\n\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n//import ProfileContainer from './components/Profile/ProfileContainer';\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className='app-wrapper-content'>\n          <Route path='/dialogs'\n            render={withSuspense(DialogsContainer)} />\n          <Route path='/profile/:userId?'\n            render={withSuspense(ProfileContainer)} />\n          <Route path='/news' component={News} />\n          <Route path='/music' component={Music} />\n          <Route path='/settings' component={Settings} />\n          <Route path='/users'\n            render={() => <UsersContainer />} />\n          <Route path='/login'\n            render={() => <Login />} />\n        </div>\n      </div>\n    );\n  };\n};\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n});\n\nlet AppContainer = compose(\n  withRouter(connect(mapStateToProps, { initializeApp })(App)));\n\nconst SamuraiJSApp = (props) => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n};\n\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\n\n\n  ReactDOM.render(\n        <SamuraiJSApp />\n     ,document.getElementById('root')\n  );\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport preloader from '../../assets/images/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n        </div>\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './FormsControls.module.css';\r\n\r\n\r\nconst FormControl = ({ input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")} >\r\n            <div>\r\n                {children}\r\n            </div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1HFKq\",\"pageNumber\":\"Paginator_pageNumber__rA1oZ\",\"selectedPage\":\"Paginator_selectedPage__3SzDk\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3udyE\",\"loginBlock\":\"Header_loginBlock__2Lh5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1D47o\",\"error\":\"FormsControls_error__NkXo5\"};","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'It\\'s my first post', likesCount: 12 },\r\n        { id: 2, message: 'Hi, how are you?', likesCount: 11 },\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n};\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n        }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}