{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editeMode","setEditeMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","map","p","key","id","createRef","postBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.d54d90c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1JJ6U\",\"item\":\"ProfileInfo_item__1asz-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3B1g2\",\"posts\":\"MyPosts_posts__1xBTR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__h75_M\"};","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editeMode, setEditeMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditeMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditeMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editeMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || \"----\"}</span>\r\n                </div>\r\n            }\r\n            {editeMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode } \r\n                    value={ status } />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://drasler.ru/wp-content/uploads/2019/10/%D0%B0%D0%BD%D0%B8%D0%BC%D0%B5-%D0%B0%D1%80%D1%82-%D0%B4%D0%B5%D0%B2%D1%83%D1%88%D0%BA%D0%B8-%D0%BD%D0%B0-%D0%B0%D0%B2%D1%83-012.jpg' />\r\n            {props.message}\r\n            <div>\r\n                <span>\r\n                    like\r\n                {props.likesCount}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../../utils/validators';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount} key={p.id} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} placeholder={\"Post message\"}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>AddPost</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus } from '../../redux/profile_reducer';\r\nimport Profile from './Profile';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} \r\n        profile={this.props.profile} \r\n        status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}), withRouter)(ProfileContainer);"],"sourceRoot":""}